<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Analytics</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="container mt-4">
        <h1>Analytics</h1>
        <h3>Device Type Visits</h3>
        <canvas id="deviceTypeChart" width="250" height="250"></canvas>
        <h3 class="mt-4">User Agent Visits</h3>
        <canvas id="userAgentChart" width="250" height="250"></canvas>
        <h3 class="mt-4">Platform/OS Visits</h3>
        <canvas id="platformChart" width="250" height="250"></canvas>
    </div>

    <script>
        // Device Type Chart Data
        const deviceTypeData = {
            labels: ['Desktop', 'Mobile'],
            datasets: [{
                data: [{{.DesktopCount}}, {{.MobileCount}}],
                backgroundColor: ['#4e73df', '#1cc88a'],
                hoverBackgroundColor: ['#2e59d9', '#17a673'],
                hoverBorderColor: '#fff',
            }]
        };

        // Create Device Type Chart
        new Chart(document.getElementById('deviceTypeChart'), {
            type: 'pie',
            data: deviceTypeData,
            options: {
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                let total = tooltipItem.dataset.data.reduce((a, b) => a + b, 0);
                                let percentage = ((tooltipItem.raw / total) * 100).toFixed(2);
                                return tooltipItem.label + ': ' + percentage + '%';
                            }
                        }
                    },
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

        // User Agent Chart Data
        const userAgentData = {
            labels: [{{.UserAgentLabels}}],
            datasets: [{
                data: [{{.UserAgentCounts}}],
                backgroundColor: ['#f6c23e', '#36b9cc', '#e74a3b', '#1cc88a', '#4e73df'],
                hoverBackgroundColor: ['#f39c12', '#17a673', '#e74a3b', '#1e88e5', '#2e59d9'],
                hoverBorderColor: '#fff',
            }]
        };

        // Create User Agent Chart
        new Chart(document.getElementById('userAgentChart'), {
            type: 'pie',
            data: userAgentData,
            options: {
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                let total = tooltipItem.dataset.data.reduce((a, b) => a + b, 0);
                                let percentage = ((tooltipItem.raw / total) * 100).toFixed(2);
                                return tooltipItem.label + ': ' + percentage + '%';
                            }
                        }
                    },
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

	// Platform/OS Chart Data
	const platformData = {
	    labels: [{{.PlatformLabels}}],
	    datasets: [{
		data: [{{.PlatformCounts}}],
		backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#ff9f40'],
		hoverBackgroundColor: ['#ff4567', '#1e88e5', '#9b33f2', '#ffb84d', '#ff7f39'],
		hoverBorderColor: '#fff',
	    }]
	};

	// Create Platform/OS Chart
	new Chart(document.getElementById('platformChart'), {
	    type: 'pie',
	    data: platformData,
	    options: {
		plugins: {
		    tooltip: {
			callbacks: {
			    label: function(tooltipItem) {
				let total = tooltipItem.dataset.data.reduce((a, b) => a + b, 0);
				let percentage = ((tooltipItem.raw / total) * 100).toFixed(2);
				return tooltipItem.label + ': ' + percentage + '%';
			    }
			}
		    },
		    legend: {
			position: 'bottom'
		    }
		}
	    }
	});
    </script>
<h3>Debug Information for Platform/OS Chart</h3>
<p>Labels: [{{.PlatformLabels}}]</p>
<p>Counts: [{{.PlatformCounts}}]</p>
</body>
</html>
